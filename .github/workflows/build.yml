name: Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    timeout-minutes: 10
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        arch: [amd64, arm64]
        
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Get version
      id: get_version
      run: echo "VERSION=$(git describe --tags --always)" >> $GITHUB_ENV
        
    - name: Build for amd64 on Linux
      if: matrix.arch == 'amd64' && matrix.os != 'windows-latest'
      run: |
        GOARCH=amd64 go build -ldflags "-X main.buildTime=$(date +%Y-%m-%dT%H:%M:%S) -X main.gitHash=${{ env.VERSION }}" -v -o ./build/ngamm-${{ matrix.os }}-amd64-${{ env.VERSION }}

    - name: Build for amd64 on Windows
      if: matrix.arch == 'amd64' && matrix.os == 'windows-latest'
      run: |
        $env:GOARCH="amd64"; $buildTime=(Get-Date -Format "yyyy-MM-ddTHH:mm:ss"); go build -ldflags "-X main.buildTime=$buildTime -X main.gitHash=${{ env.VERSION }}" -v -o ./build/ngamm-${{ matrix.os }}-amd64-${{ env.VERSION }}.exe

    - name: Build for arm64 on Linux
      if: matrix.arch == 'arm64' && matrix.os != 'windows-latest'
      run: |
        GOARCH=arm64 go build -ldflags "-X main.buildTime=$(date +%Y-%m-%dT%H:%M:%S) -X main.gitHash=${{ env.VERSION }}" -v -o ./build/ngamm-${{ matrix.os }}-arm64-${{ env.VERSION }}

    - name: Build for arm64 on Windows
      if: matrix.arch == 'arm64' && matrix.os == 'windows-latest'
      run: |
        $env:GOARCH="arm64"; $buildTime=(Get-Date -Format "yyyy-MM-ddTHH:mm:ss"); go build -ldflags "-X main.buildTime=$buildTime -X main.gitHash=${{ env.VERSION }}" -v -o ./build/ngamm-${{ matrix.os }}-arm64-${{ env.VERSION }}.exe

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ matrix.os }}-${{ matrix.arch }}
        path: ./build/

    - name: Build Docker image - ngamm
      if: matrix.arch == 'amd64' && matrix.os != 'windows-latest'
      run: |
        docker build -t ngamm:${{ env.VERSION }} .

    - name: Build Docker image - ngamm-pan
      if: matrix.arch == 'amd64' && matrix.os != 'windows-latest'
      run: |
        docker build --build-arg NET_PAN="true" -t ngamm-pan:${{ env.VERSION }} .

    - name: Log in to Docker Hub
      if: matrix.arch == 'amd64' && matrix.os != 'windows-latest'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push ngamm to Docker Hub with version tag
      if: matrix.arch == 'amd64' && matrix.os != 'windows-latest'
      run: |
        docker tag ngamm:${{ env.VERSION }} ${{ secrets.DOCKER_USERNAME }}/ngamm:${{ env.VERSION }}
        docker push ${{ secrets.DOCKER_USERNAME }}/ngamm:${{ env.VERSION }}

    - name: Push ngamm to Docker Hub with latest tag
      if: matrix.arch == 'amd64' && matrix.os != 'windows-latest'
      run: |
        docker tag ngamm:${{ env.VERSION }} ${{ secrets.DOCKER_USERNAME }}/ngamm:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/ngamm:latest
        
    - name: Push ngamm-pan to Docker Hub with version tag
      if: matrix.arch == 'amd64' && matrix.os != 'windows-latest'
      run: |
        docker tag ngamm-pan:${{ env.VERSION }} ${{ secrets.DOCKER_USERNAME }}/ngamm-pan:${{ env.VERSION }}
        docker push ${{ secrets.DOCKER_USERNAME }}/ngamm-pan:${{ env.VERSION }}

    - name: Push ngamm-pan to Docker Hub with latest tag
      if: matrix.arch == 'amd64' && matrix.os != 'windows-latest'
      run: |
        docker tag ngamm-pan:${{ env.VERSION }} ${{ secrets.DOCKER_USERNAME }}/ngamm-pan:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/ngamm-pan:latest