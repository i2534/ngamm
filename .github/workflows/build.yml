name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    timeout-minutes: 10
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        arch: [amd64, arm64]
        
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Get version
      id: get_version
      run: echo "VERSION=$(git describe --tags --always)" >> $GITHUB_ENV

    - name: Build for amd64 on Linux
      if: matrix.arch == 'amd64' && matrix.os != 'windows-latest'
      run: |
        GOARCH=amd64 go build -v -o ./build/ngamm-${{ matrix.os }}-amd64-${{ env.VERSION }}

    - name: Build for amd64 on Windows
      if: matrix.arch == 'amd64' && matrix.os == 'windows-latest'
      run: |
        $env:GOARCH="amd64"; go build -v -o ./build/ngamm-${{ matrix.os }}-amd64-${{ env.VERSION }}.exe

    - name: Build for arm64 on Linux
      if: matrix.arch == 'arm64' && matrix.os != 'windows-latest'
      run: |
        GOARCH=arm64 go build -v -o ./build/ngamm-${{ matrix.os }}-arm64-${{ env.VERSION }}

    - name: Build for arm64 on Windows
      if: matrix.arch == 'arm64' && matrix.os == 'windows-latest'
      run: |
        $env:GOARCH="arm64"; go build -v -o ./build/ngamm-${{ matrix.os }}-arm64-${{ env.VERSION }}.exe

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ matrix.os }}-${{ matrix.arch }}
        path: ./build/